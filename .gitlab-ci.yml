image: git.cattatech.de:5050/company/modbuslib:0.0.2

stages:
  - build

.host: &host_base
  stage: build
  script:
    - ./build.sh
    - cp -r build/bin/test_binary tests
    - cp -r build/bin/example/linux examples
    - echo ${CI_COMMIT_SHA} >> githash
  artifacts:
    when: always
    paths:
    - tests
    - examples
    - githash

.host: &windows_base
  stage: build
  script:
    - ./build.sh --windows
    - cp -r build/mingw/bin/test_binary tests
    - cp -r build/mingw/bin/example/windows examples
    - echo ${CI_COMMIT_SHA} >> githash
  artifacts:
    when: always
    paths:
    - tests
    - examples
    - githash

.host: &rp2040_base
  stage: build
  script:
    - ./build.sh --rp2040
    - cp build/rp2040/modbus.uf2 modbus.uf2
    - cp build/rp2040/modbus.elf modbus.elf
    - echo ${CI_COMMIT_SHA} >> githash
  artifacts:
    when: always
    paths:
    - modbus.uf2
    - modbus.elf
    - githash

.host: &esp32_base
  stage: build
  script:
    - . /esp-idf/export.sh
    - ./build.sh --esp32
    - cp build/esp32/SendRequest.bin SendRequest.bin
    - cp build/esp32/partition_table/partition-table.bin partition-table.bin
    - cp build/esp32/bootloader/bootloader.bin bootloader.bin
    - echo ${CI_COMMIT_SHA} >> githash
  artifacts:
    when: always
    paths:
    - SendRequest.bin
    - partition-table.bin
    - bootloader.bin
    - githash

.test: &test_base
  stage: build
  script:
    - ./build.sh --coverage
    - cp build/coverage/* . -r
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    when: always
    paths:
    - coverage*

.docu: &docu_base
  stage: build
  script:
    - doxygen --version
    - cd docu && doxygen -u && cd ..
    - ./build.sh --docu
    - mv build/doxy/html/ html
  artifacts:
    when: always
    paths:
    - html/*

.docu: &manual_base
  image: git.cattatech.de:5050/maik.urbannek/simplex:2.0.0
  stage: build
  script:
    - ./build.sh --manual
    - cp build/manual manuals
  artifacts:
    when: always
    paths:
    - manuals/*

host:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *host_base

host:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *host_base

test:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *test_base

test:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *test_base

docu:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *docu_base

docu:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *docu_base

manual:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *manual_base

manual:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *manual_base

windows:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *windows_base

windows:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *windows_base

rp2040:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *rp2040_base

rp2040:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *rp2040_base

esp32:tag:
  only:
    - tags
  artifacts:
    expire_in: never
  <<: *esp32_base

esp32:commit:
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
  <<: *esp32_base
