cmake_minimum_required(VERSION 3.5)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin/test_binary)

include_directories(${CMAKE_SOURCE_DIR}/test/include)

add_library(conststring_test                      OBJECT   main_unit_test_ConstString.cpp                                         )
add_library(decimal_test                          OBJECT   main_unit_test_Decimal.cpp                                             )
add_library(hexadecimal_test                      OBJECT   main_unit_test_Hexadecimal.cpp                                         )
add_library(hardware_uart_baudrate_test           OBJECT   main_unit_test_hardware_uart_Baudrate.cpp                              )
add_library(hardware_uart_databits_test           OBJECT   main_unit_test_hardware_uart_DataBits.cpp                              )
add_library(hardware_uart_parity_test             OBJECT   main_unit_test_hardware_uart_Parity.cpp                                )
add_library(hardware_uart_stopbits_test           OBJECT   main_unit_test_hardware_uart_StopBits.cpp                              )
add_library(json_parser_test                      OBJECT   main_unit_test_json_Parser.cpp                                         )
add_library(json_parsingerror_test                OBJECT   main_unit_test_json_ParsingError.cpp                                   )
add_library(json_token_test                       OBJECT   main_unit_test_json_Token.cpp                                          )
add_library(json_tokentype_test                   OBJECT   main_unit_test_json_TokenType.cpp                                      )
add_library(modbus_sunspec_ScaleFactor_test       OBJECT   main_unit_test_modbus_sunspec_ScaleFactor.cpp                          )
add_library(parser_defaulttoken_test              OBJECT   main_unit_test_parser_DefaultToken.cpp                                 )
add_library(parser_defaulttokentype_test          OBJECT   main_unit_test_parser_DefaultTokenType.cpp                             )
add_library(parser_inputhandled_test              OBJECT   main_unit_test_parser_InputHandled.cpp                                 )
add_library(parser_linecolumncounter_test         OBJECT   main_unit_test_parser_LineColumnCounter.cpp                            )
add_library(parser_textposition_test              OBJECT   main_unit_test_parser_TextPosition.cpp                                 )
add_library(parser_state_test                     OBJECT   main_unit_test_parser_State.cpp                                        )
add_library(parser_utf8parserserializer_test      OBJECT   main_unit_test_parser_Utf8ParserSerializer.cpp                         )
add_library(state_activecloseerrorstate_test      OBJECT   main_unit_test_state_ActiveCloseErrorState.cpp                         )
add_library(state_defaulterror_test               OBJECT   main_unit_test_state_DefaultError.cpp                                  )

add_executable(automatic_test_ConstString                       $<TARGET_OBJECTS:conststring_test>                                )
add_executable(automatic_test_Decimal                           $<TARGET_OBJECTS:decimal_test>                                    )
add_executable(automatic_test_Hexadecimal                       $<TARGET_OBJECTS:hexadecimal_test>                                )
add_executable(automatic_test_hardware_uart_Baudrate            $<TARGET_OBJECTS:hardware_uart_baudrate_test>                     )
add_executable(automatic_test_hardware_uart_DataBits            $<TARGET_OBJECTS:hardware_uart_databits_test>                     )
add_executable(automatic_test_hardware_uart_Parity              $<TARGET_OBJECTS:hardware_uart_parity_test>                       )
add_executable(automatic_test_hardware_uart_StopBits            $<TARGET_OBJECTS:hardware_uart_stopbits_test>                     )
add_executable(automatic_test_json_Parser                       $<TARGET_OBJECTS:json_parser_test>                                )
add_executable(automatic_test_json_ParsingError                 $<TARGET_OBJECTS:json_parsingerror_test>                          )
add_executable(automatic_test_json_Token                        $<TARGET_OBJECTS:json_token_test>                                 )
add_executable(automatic_test_json_TokenType                    $<TARGET_OBJECTS:json_tokentype_test>                             )
add_executable(automatic_test_modbus_sunspec_ScaleFactor        $<TARGET_OBJECTS:modbus_sunspec_ScaleFactor_test>                 )
add_executable(automatic_test_parser_DefaultToken               $<TARGET_OBJECTS:parser_defaulttoken_test>                        )
add_executable(automatic_test_parser_DefaultTokenType           $<TARGET_OBJECTS:parser_defaulttokentype_test>                    )
add_executable(automatic_test_parser_InputHandled               $<TARGET_OBJECTS:parser_inputhandled_test>                        )
add_executable(automatic_test_parser_LineColumnCounter          $<TARGET_OBJECTS:parser_linecolumncounter_test>                   )
add_executable(automatic_test_parser_TextPosition               $<TARGET_OBJECTS:parser_textposition_test>                        )
add_executable(automatic_test_parser_State                      $<TARGET_OBJECTS:parser_state_test>                               )
add_executable(automatic_test_parser_Utf8ParserSerializer       $<TARGET_OBJECTS:parser_utf8parserserializer_test>                )
add_executable(automatic_test_state_ActiveCloseErrorState       $<TARGET_OBJECTS:state_activecloseerrorstate_test>                )
add_executable(automatic_test_state_DefaultError                $<TARGET_OBJECTS:state_defaulterror_test>                         )

add_custom_command(MAIN_DEPENDENCY   ${CMAKE_CURRENT_SOURCE_DIR}/runtest.sh
                   OUTPUT            ${EXECUTABLE_OUTPUT_PATH}/runtest.sh
                   COMMAND           ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/runtest.sh
                                                              ${EXECUTABLE_OUTPUT_PATH}/runtest.sh
                   VERBATIM)

add_custom_target(script ALL DEPENDS ${EXECUTABLE_OUTPUT_PATH}/runtest.sh)
