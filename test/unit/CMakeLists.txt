cmake_minimum_required(VERSION 3.5)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin/test_binary)

include_directories(${CMAKE_SOURCE_DIR}/test/include)

add_library(conststring_test                                OBJECT   main_unit_test_ConstString.cpp                                                   )
add_library(decimal_test                                    OBJECT   main_unit_test_Decimal.cpp                                                       )
add_library(hexadecimal_test                                OBJECT   main_unit_test_Hexadecimal.cpp                                                   )
add_library(hardware_uart_baudrate_test                     OBJECT   main_unit_test_hardware_uart_Baudrate.cpp                                        )
add_library(hardware_uart_databits_test                     OBJECT   main_unit_test_hardware_uart_DataBits.cpp                                        )
add_library(hardware_uart_parity_test                       OBJECT   main_unit_test_hardware_uart_Parity.cpp                                          )
add_library(hardware_uart_stopbits_test                     OBJECT   main_unit_test_hardware_uart_StopBits.cpp                                        )
add_library(json_parser_test                                OBJECT   main_unit_test_json_Parser.cpp                                                   )
add_library(json_parsingerror_test                          OBJECT   main_unit_test_json_ParsingError.cpp                                             )
add_library(json_token_test                                 OBJECT   main_unit_test_json_Token.cpp                                                    )
add_library(json_tokentype_test                             OBJECT   main_unit_test_json_TokenType.cpp                                                )
add_library(modbus_si_date_test                             OBJECT   main_unit_test_modbus_si_Date.cpp                                                )
add_library(modbus_si_powerconfig_test                      OBJECT   main_unit_test_modbus_si_PowerConfig.cpp                                         )
add_library(modbus_si_request_constantvoltage               OBJECT   main_unit_test_modbus_si_request_ConstantVoltage.cpp                             )
add_library(modbus_si_request_controlbatteryinvert          OBJECT   main_unit_test_modbus_si_request_ControlBatteryInvert.cpp                        )
add_library(modbus_si_request_limitbatteryinvert            OBJECT   main_unit_test_modbus_si_request_LimitBatteryInvert.cpp                          )
add_library(modbus_si_request_powerfactor                   OBJECT   main_unit_test_modbus_si_request_PowerFactor.cpp                                 )
add_library(modbus_si_response_factoryvalues                OBJECT   main_unit_test_modbus_si_response_FactoryValues.cpp                              )
add_library(modbus_si_response_readerror                    OBJECT   main_unit_test_modbus_si_response_ReadError.cpp                                  )
add_library(modbus_si_response_readoperatingdata3e          OBJECT   main_unit_test_modbus_si_response_ReadOperatingData3e.cpp                        )
add_library(modbus_si_response_readoperatingdata33          OBJECT   main_unit_test_modbus_si_response_ReadOperatingData33.cpp                        )
add_library(modbus_si_state_test                            OBJECT   main_unit_test_modbus_si_State.cpp                                               )
add_library(modbus_si_type_test                             OBJECT   main_unit_test_modbus_si_Type.cpp                                                )
add_library(modbus_sunspec_connectedphase_test              OBJECT   main_unit_test_modbus_sunspec_ConnectedPhase.cpp                                 )
add_library(modbus_sunspec_model_basicsettingsread_test     OBJECT   main_unit_test_modbus_sunspec_model_BasicSettingsRead.cpp                        )
add_library(modbus_sunspec_model_basicsettingswrite_test    OBJECT   main_unit_test_modbus_sunspec_model_BasicSettingsWrite.cpp                       )
add_library(modbus_sunspec_model_commonread_test            OBJECT   main_unit_test_modbus_sunspec_model_CommonRead.cpp                               )
add_library(modbus_sunspec_model_commonwrite_test           OBJECT   main_unit_test_modbus_sunspec_model_CommonWrite.cpp                              )
add_library(modbus_sunspec_model_extendedmeasurements_test  OBJECT   main_unit_test_modbus_sunspec_model_ExtendedMeasurements.cpp                     )
add_library(modbus_sunspec_model_immediatecontrols_test     OBJECT   main_unit_test_modbus_sunspec_model_ImmediateControls.cpp                        )
add_library(modbus_sunspec_model_inverter_test              OBJECT   main_unit_test_modbus_sunspec_model_Inverter.cpp                                 )
add_library(modbus_sunspec_model_nameplate_test             OBJECT   main_unit_test_modbus_sunspec_model_Nameplate.cpp                                )
add_library(modbus_sunspec_model_sicontrol_test             OBJECT   main_unit_test_modbus_sunspec_model_SIControl.cpp                                )
add_library(modbus_sunspec_model_storage_test               OBJECT   main_unit_test_modbus_sunspec_model_Storage.cpp                                  )
add_library(modbus_sunspec_scaledvalue2u16_test             OBJECT   main_unit_test_modbus_sunspec_ScaledValue2U16.cpp                                )
add_library(modbus_sunspec_scaledvalue3u16_test             OBJECT   main_unit_test_modbus_sunspec_ScaledValue3U16.cpp                                )
add_library(modbus_sunspec_scaledvalue4u16_test             OBJECT   main_unit_test_modbus_sunspec_ScaledValue4U16.cpp                                )
add_library(modbus_sunspec_scaledvalues16_test              OBJECT   main_unit_test_modbus_sunspec_ScaledValueS16.cpp                                 )
add_library(modbus_sunspec_scaledvalueu16_test              OBJECT   main_unit_test_modbus_sunspec_ScaledValueU16.cpp                                 )
add_library(modbus_sunspec_scaledvalueu32_test              OBJECT   main_unit_test_modbus_sunspec_ScaledValueU32.cpp                                 )
add_library(modbus_sunspec_scalefactor_test                 OBJECT   main_unit_test_modbus_sunspec_ScaleFactor.cpp                                    )
add_library(modbus_sunspec_string_test                      OBJECT   main_unit_test_modbus_sunspec_String.cpp                                         )
add_library(modbus_sunspec_values16_test                    OBJECT   main_unit_test_modbus_sunspec_ValueS16.cpp                                       )
add_library(modbus_sunspec_valueu8_test                     OBJECT   main_unit_test_modbus_sunspec_ValueU8.cpp                                        )
add_library(modbus_sunspec_valueu16_test                    OBJECT   main_unit_test_modbus_sunspec_ValueU16.cpp                                       )
add_library(modbus_sunspec_valueu32_test                    OBJECT   main_unit_test_modbus_sunspec_ValueU32.cpp                                       )
add_library(modbus_sunspec_valueu64_test                    OBJECT   main_unit_test_modbus_sunspec_ValueU64.cpp                                       )
add_library(modbus_token_test                               OBJECT   main_unit_test_modbus_Token.cpp                                                  )
add_library(modbus_tokentype_test                           OBJECT   main_unit_test_modbus_TokenType.cpp                                              )
add_library(modbus_uart_test                                OBJECT   main_unit_test_modbus_Uart.cpp                                                   )
add_library(modbus_uartstate_test                           OBJECT   main_unit_test_modbus_UartState.cpp                                              )
add_library(parser_defaulttoken_test                        OBJECT   main_unit_test_parser_DefaultToken.cpp                                           )
add_library(parser_defaulttokentype_test                    OBJECT   main_unit_test_parser_DefaultTokenType.cpp                                       )
add_library(parser_inputhandled_test                        OBJECT   main_unit_test_parser_InputHandled.cpp                                           )
add_library(parser_linecolumncounter_test                   OBJECT   main_unit_test_parser_LineColumnCounter.cpp                                      )
add_library(parser_textposition_test                        OBJECT   main_unit_test_parser_TextPosition.cpp                                           )
add_library(parser_state_test                               OBJECT   main_unit_test_parser_State.cpp                                                  )
add_library(parser_utf8parserserializer_test                OBJECT   main_unit_test_parser_Utf8ParserSerializer.cpp                                   )
add_library(state_activecloseerrorstate_test                OBJECT   main_unit_test_state_ActiveCloseErrorState.cpp                                   )
add_library(state_defaulterror_test                         OBJECT   main_unit_test_state_DefaultError.cpp                                            )

add_executable(automatic_test_ConstString                                 $<TARGET_OBJECTS:conststring_test>                                          )
add_executable(automatic_test_Decimal                                     $<TARGET_OBJECTS:decimal_test>                                              )
add_executable(automatic_test_Hexadecimal                                 $<TARGET_OBJECTS:hexadecimal_test>                                          )
add_executable(automatic_test_hardware_uart_Baudrate                      $<TARGET_OBJECTS:hardware_uart_baudrate_test>                               )
add_executable(automatic_test_hardware_uart_DataBits                      $<TARGET_OBJECTS:hardware_uart_databits_test>                               )
add_executable(automatic_test_hardware_uart_Parity                        $<TARGET_OBJECTS:hardware_uart_parity_test>                                 )
add_executable(automatic_test_hardware_uart_StopBits                      $<TARGET_OBJECTS:hardware_uart_stopbits_test>                               )
add_executable(automatic_test_json_Parser                                 $<TARGET_OBJECTS:json_parser_test>                                          )
add_executable(automatic_test_json_ParsingError                           $<TARGET_OBJECTS:json_parsingerror_test>                                    )
add_executable(automatic_test_json_Token                                  $<TARGET_OBJECTS:json_token_test>                                           )
add_executable(automatic_test_json_TokenType                              $<TARGET_OBJECTS:json_tokentype_test>                                       )
add_executable(automatic_test_modbus_si_Date                              $<TARGET_OBJECTS:modbus_si_date_test>                                       )
add_executable(automatic_test_modbus_si_PowerConfig                       $<TARGET_OBJECTS:modbus_si_powerconfig_test>                                )
add_executable(automatic_test_modbus_si_request_ConstantVoltage           $<TARGET_OBJECTS:modbus_si_request_constantvoltage>                         )
add_executable(automatic_test_modbus_si_request_ControlBatteryInvert      $<TARGET_OBJECTS:modbus_si_request_controlbatteryinvert>                    )
add_executable(automatic_test_modbus_si_request_LimitBatteryInvert        $<TARGET_OBJECTS:modbus_si_request_limitbatteryinvert>                      )
add_executable(automatic_test_modbus_si_request_PowerFactor               $<TARGET_OBJECTS:modbus_si_request_powerfactor>                             )
add_executable(automatic_test_modbus_si_response_FactoryValues            $<TARGET_OBJECTS:modbus_si_response_factoryvalues>                          )
add_executable(automatic_test_modbus_si_response_ReadError                $<TARGET_OBJECTS:modbus_si_response_readerror>                              )
add_executable(automatic_test_modbus_si_response_ReadOperatingData3e      $<TARGET_OBJECTS:modbus_si_response_readoperatingdata3e>                    )
add_executable(automatic_test_modbus_si_response_ReadOperatingData33      $<TARGET_OBJECTS:modbus_si_response_readoperatingdata33>                    )
add_executable(automatic_test_modbus_si_State                             $<TARGET_OBJECTS:modbus_si_state_test>                                      )
add_executable(automatic_test_modbus_si_Type                              $<TARGET_OBJECTS:modbus_si_type_test>                                       )
add_executable(automatic_test_modbus_sunspec_ConnectedPhase               $<TARGET_OBJECTS:modbus_sunspec_connectedphase_test>                        )
add_executable(automatic_test_modbus_sunspec_model_BasicSettingsRead      $<TARGET_OBJECTS:modbus_sunspec_model_basicsettingsread_test>               )
add_executable(automatic_test_modbus_sunspec_model_BasicSettingsWrite     $<TARGET_OBJECTS:modbus_sunspec_model_basicsettingswrite_test>              )
add_executable(automatic_test_modbus_sunspec_model_CommonRead             $<TARGET_OBJECTS:modbus_sunspec_model_commonread_test>                      )
add_executable(automatic_test_modbus_sunspec_model_CommonWrite            $<TARGET_OBJECTS:modbus_sunspec_model_commonwrite_test>                     )
add_executable(automatic_test_modbus_sunspec_model_ExtendedMeasurements   $<TARGET_OBJECTS:modbus_sunspec_model_extendedmeasurements_test>            )
add_executable(automatic_test_modbus_sunspec_model_ImmediateControls      $<TARGET_OBJECTS:modbus_sunspec_model_immediatecontrols_test>               )
add_executable(automatic_test_modbus_sunspec_model_Inverter               $<TARGET_OBJECTS:modbus_sunspec_model_inverter_test>                        )
add_executable(automatic_test_modbus_sunspec_model_Nameplate              $<TARGET_OBJECTS:modbus_sunspec_model_nameplate_test>                       )
add_executable(automatic_test_modbus_sunspec_model_SIControl              $<TARGET_OBJECTS:modbus_sunspec_model_sicontrol_test>                       )
add_executable(automatic_test_modbus_sunspec_model_Storage                $<TARGET_OBJECTS:modbus_sunspec_model_storage_test>                         )
add_executable(automatic_test_modbus_sunspec_ScaledValue2U16              $<TARGET_OBJECTS:modbus_sunspec_scaledvalue2u16_test>                       )
add_executable(automatic_test_modbus_sunspec_ScaledValue3U16              $<TARGET_OBJECTS:modbus_sunspec_scaledvalue3u16_test>                       )
add_executable(automatic_test_modbus_sunspec_ScaledValue4U16              $<TARGET_OBJECTS:modbus_sunspec_scaledvalue4u16_test>                       )
add_executable(automatic_test_modbus_sunspec_ScaledValueS16               $<TARGET_OBJECTS:modbus_sunspec_scaledvalues16_test>                        )
add_executable(automatic_test_modbus_sunspec_ScaledValueU16               $<TARGET_OBJECTS:modbus_sunspec_scaledvalueu16_test>                        )
add_executable(automatic_test_modbus_sunspec_ScaledValueU32               $<TARGET_OBJECTS:modbus_sunspec_scaledvalueu32_test>                        )
add_executable(automatic_test_modbus_sunspec_ScaleFactor                  $<TARGET_OBJECTS:modbus_sunspec_scalefactor_test>                           )
add_executable(automatic_test_modbus_sunspec_String                       $<TARGET_OBJECTS:modbus_sunspec_string_test>                                )
add_executable(automatic_test_modbus_sunspec_ValueS16                     $<TARGET_OBJECTS:modbus_sunspec_values16_test>                              )
add_executable(automatic_test_modbus_sunspec_ValueU8                      $<TARGET_OBJECTS:modbus_sunspec_valueu8_test>                               )
add_executable(automatic_test_modbus_sunspec_ValueU16                     $<TARGET_OBJECTS:modbus_sunspec_valueu16_test>                              )
add_executable(automatic_test_modbus_sunspec_ValueU32                     $<TARGET_OBJECTS:modbus_sunspec_valueu32_test>                              )
add_executable(automatic_test_modbus_sunspec_ValueU64                     $<TARGET_OBJECTS:modbus_sunspec_valueu64_test>                              )
add_executable(automatic_test_modbus_Token                                $<TARGET_OBJECTS:modbus_token_test>                                         )
add_executable(automatic_test_modbus_TokenType                            $<TARGET_OBJECTS:modbus_tokentype_test>                                     )
add_executable(automatic_test_modbus_Uart                                 $<TARGET_OBJECTS:modbus_uart_test>                                          )
add_executable(automatic_test_modbus_UartState                            $<TARGET_OBJECTS:modbus_uartstate_test>                                     )
add_executable(automatic_test_parser_DefaultToken                         $<TARGET_OBJECTS:parser_defaulttoken_test>                                  )
add_executable(automatic_test_parser_DefaultTokenType                     $<TARGET_OBJECTS:parser_defaulttokentype_test>                              )
add_executable(automatic_test_parser_InputHandled                         $<TARGET_OBJECTS:parser_inputhandled_test>                                  )
add_executable(automatic_test_parser_LineColumnCounter                    $<TARGET_OBJECTS:parser_linecolumncounter_test>                             )
add_executable(automatic_test_parser_TextPosition                         $<TARGET_OBJECTS:parser_textposition_test>                                  )
add_executable(automatic_test_parser_State                                $<TARGET_OBJECTS:parser_state_test>                                         )
add_executable(automatic_test_parser_Utf8ParserSerializer                 $<TARGET_OBJECTS:parser_utf8parserserializer_test>                          )
add_executable(automatic_test_state_ActiveCloseErrorState                 $<TARGET_OBJECTS:state_activecloseerrorstate_test>                          )
add_executable(automatic_test_state_DefaultError                          $<TARGET_OBJECTS:state_defaulterror_test>                                   )

add_custom_command(MAIN_DEPENDENCY   ${CMAKE_CURRENT_SOURCE_DIR}/runtest.sh
                   OUTPUT            ${EXECUTABLE_OUTPUT_PATH}/runtest.sh
                   COMMAND           ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/runtest.sh
                                                              ${EXECUTABLE_OUTPUT_PATH}/runtest.sh
                   VERBATIM)

add_custom_target(script ALL DEPENDS ${EXECUTABLE_OUTPUT_PATH}/runtest.sh)
